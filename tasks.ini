[default]
# comma separated list for additional global configs
global_config=~/.vim/tasks.ini,~/.config/asynctask/tasks.ini
root_marker=.git,.svn,.root,.project,.hg
cfg_name=.tasks
system=linux

# file type detection, to match commands with filetypes and fill $(VIM_FILETYPE) field.
# in asynctasks.vim, vim did this for you, but in command line, we will detect ourself.
[filetype]
asm=*.asm,*.s,*.S
bash=*.bash
c=*.[cChH],.[cChH].in
cmake=CMakeLists.txt
cpp=*.[cChH]pp,*.hh,*.[ch]xx,*.cc,*.cc.in,*.cpp.in,*.hh.in,*.cxx.in
cs=*.cs
....
text=*.txt
vim=*.vim
yaml=*.yaml,*.yml
zsh=*.zsh


# project配置
[project-build]
command=make
# 设置在当前项目的根目录处运行 make
cwd=$(VIM_ROOT)

[project-run]
command=make run
# <root> 是 $(VIM_ROOT) 的别名，写起来容易些
cwd=<root>
output=terminal

[project-gdb]
command=make gdb
# <root> 是 $(VIM_ROOT) 的别名，写起来容易些
cwd=<root>
output=terminal

[project-clean]
command=make clean
cwd=<root>
output=quickfix

# file配置
[file-build]
command:c,cpp=gcc -O2 -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:rust=cargo build
cwd=$(VIM_FILEDIR)
output=terminal

[file-run]
command="$(VIM_FILEPATH)"
command:c,cpp=gcc -O2 -g -Wall "$(VIM_FILEPATH)" -o "$(VIM_PATHNOEXT)" -lstdc++ -lm -msse3 && "$(VIM_PATHNOEXT)"
command:go="$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=bash "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:rust=cargo run
cwd=$(VIM_FILEDIR)
output=terminal

[file-clean]
command=rm "$(VIM_PATHNOEXT)"

[file-test]
command:rust=cargo test


[tags]
command=ctags -R -a .
# <root> 是 $(VIM_ROOT) 的别名，写起来容易些
cwd=<root>
output=terminal

[project-format]
command=make format
# 设置在当前项目的根目录处运行 make
cwd=$(VIM_ROOT)
output=terminal

[edit-global-task]
command=nvim ~/.config/nvim/tasks.ini
cwd=<root>
output=terminal

[edit-local-task]
command=nvim ./.tasks
cwd=<root>
output=terminal

[cp_config_file]
command=cp_config_file.sh
cwd=<root>
output=terminal

[edit-zshrc]
command=nvim ~/.zshrc
cwd=<root>
output=terminal

[cargo-update]
command=cargo update
cwd=<root>
output=terminal

[edit-ssh-config]
command=nvim ~/.ssh/config
cwd=<root>
output=terminal

[cp-clang-format]
command=cp $(find ~/ -type f -path "*/dotfile/.clang-format" -print -quit) ./
cwd=<root>
output=terminal
